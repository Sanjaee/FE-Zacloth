name: Deploy Frontend to Production with Docker

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          # Pastikan berada di direktori yang tepat
          cd FE-Zacloth

          # Bangun image Docker
          docker build -t zacloth-frontend:${{ github.sha }} .
          docker tag zacloth-frontend:${{ github.sha }} zacloth-frontend:latest

          # Simpan image ke file tar.gz
          docker save zacloth-frontend:latest | gzip > zacloth-frontend.tar.gz

          echo "✅ Docker image built and saved successfully"

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            # Navigasi ke direktori proyek
            cd /root/zacloth

            # Buat file .env jika belum ada
            cat > .env << 'ENVEOF'
            NODE_ENV=production
            NEXT_PUBLIC_API_URL=https://zacloth.com
            ENVEOF

            # Buat file docker-compose.yml jika belum ada
            cat > docker-compose.yml << 'EOF'
            version: '3.8'
            services:
              web:
                image: zacloth-frontend:latest
                ports:
                  - "3000:3000"
                restart: unless-stopped
                env_file:
                  - .env
                networks:
                  - zacloth-network
            networks:
              zacloth-network:
                driver: bridge
            EOF

            # Muat image Docker baru
            docker load < zacloth-frontend.tar.gz

            # Hentikan dan hapus container lama
            docker-compose down || true

            # Hapus image lama untuk menghemat ruang
            docker image prune -f

            # Jalankan container baru
            docker-compose up -d

            # Tunggu beberapa detik agar container sehat
            sleep 10

            # Periksa apakah container berjalan
            if docker-compose ps | grep -q "Up"; then
              echo "✅ Frontend deployment completed successfully!"
            else
              echo "❌ Frontend deployment failed!"
              docker-compose logs
              exit 1
            fi

      - name: Notify deployment status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ Frontend deployment successful!"
          else
            echo "❌ Frontend deployment failed!"
          fi
