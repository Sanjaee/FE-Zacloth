name: Auto Deploy Frontend to VPS with Docker

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3️⃣ Build Docker image locally
      - name: Build Docker image
        run: |
          docker build -t zacloth-frontend:${{ github.sha }} .
          docker tag zacloth-frontend:${{ github.sha }} zacloth-frontend:latest
          docker save zacloth-frontend:latest | gzip > zacloth-frontend.tar.gz
          echo "✅ Docker image built and saved successfully"

      # 4️⃣ Deploy to VPS via SSH
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd /root/zacloth

            # Tarik update repo
            git pull origin main || git pull origin master

            # Buat file .env jika belum ada
            cat > .env << 'ENVEOF'
            NODE_ENV=production
            NEXT_PUBLIC_API_URL=https://zacloth.com
            ENVEOF

                        # Buat docker-compose.yml jika belum ada
                        cat > docker-compose.yml << 'EOF'
            version: '3.8'
            services:
              web:
                image: zacloth-frontend:latest
                ports:
                  - "3000:3000"
                restart: unless-stopped
                env_file:
                  - .env
                networks:
                  - zacloth-network
            networks:
              zacloth-network:
                driver: bridge
            EOF

            # Load image Docker baru
            docker load < zacloth-frontend.tar.gz

            # Stop dan remove container lama
            docker compose down || true

            # Hapus image lama yang tidak dipakai
            docker image prune -f

            # Jalankan container baru
            docker compose up -d --build

            # Tunggu container sehat
            sleep 10

            # Cek apakah container berjalan
            if docker compose ps | grep -q "Up"; then
              echo "✅ Frontend deployment completed successfully!"
            else
              echo "❌ Frontend deployment failed!"
              docker compose logs
              exit 1
            fi

      # 5️⃣ Notify status deployment
      - name: Notify deployment status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ Frontend deployment successful!"
          else
            echo "❌ Frontend deployment failed!"
          fi
